{"version":3,"sources":["promise/index.js"],"names":["add","$addPromise","chains","$addFields","$addMapReduce","$addNo","$addRecurse","$addVal","$addValue","$addTimed","capitalize","str","charAt","toUpperCase","slice","Gun","names","forEach","nameCap","name","fun","chain","allNames"],"mappings":";;;;;QAoCgBA,G,GAAAA,G;QAqBAC,W,GAAAA,W;;AAzDhB;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAIA,IAAMC,SAAS;AACbC,gCADa;AAEbC,yCAFa;AAGbC,oBAHa;AAIbC,mCAJa;AAKbC,uBALa;AAMbC,6BANa;AAObC;AAPa,CAAf;;AAUA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAEM,SAASd,GAAT,CAAae,GAAb,EAA4B;AAAA,oCAAPC,KAAO;AAAPA,SAAO;AAAA;;AACjCA,QAAMC,OAAN,CAAc,gBAAQ;AACpB,QAAIC,UAAUR,WAAWS,IAAX,CAAd;AACA,QAAIC,MAAM,SAASF,OAAnB;AACAhB,WAAOkB,GAAP,EAAY;AACVC,aAAON,IAAIM,KADD;AAEVN;AAFU,KAAZ;AAID,GAPD;AAQD;;AAED,IAAMO,WAAW,CACf,QADe,EAEf,WAFe,EAGf,KAHe,EAIf,OAJe,EAKf,OALe,EAMf,IANe,EAOf,SAPe,CAAjB;;AAUO,SAASrB,WAAT,OAEJ;AAAA,MADDc,GACC,QADDA,GACC;;AACDf,wBAAIe,GAAJ,SAAYO,QAAZ;AACD;;kBAEcrB,W","file":"index.js","sourcesContent":["import {\n  $addFields\n} from './fields'\nimport {\n  $addMapReduce\n} from './map-reduce'\nimport {\n  $addVal\n} from './val'\nimport {\n  $addValue\n} from './value'\nimport {\n  $addTimed\n} from './timed'\nimport {\n  $addNo\n} from './no'\nimport {\n  $addRecurse\n} from './recurse'\n\nconst chains = {\n  $addFields,\n  $addMapReduce,\n  $addNo,\n  $addRecurse,\n  $addVal,\n  $addValue,\n  $addTimed\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n  names.forEach(name => {\n    let nameCap = capitalize(name)\n    let fun = '$add' + nameCap\n    chains[fun]({\n      chain: Gun.chain,\n      Gun\n    })\n  })\n}\n\nconst allNames = [\n  'fields',\n  'mapReduce',\n  'val',\n  'value',\n  'timed',\n  'no',\n  'recurse'\n]\n\nexport function $addPromise({\n  Gun\n}) {\n  add(Gun, ...allNames)\n}\n\nexport default $addPromise"]}